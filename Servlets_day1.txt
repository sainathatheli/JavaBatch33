Servlets:
==========
Servelt is an Api (Interfaces and classes)

Api :-- APi contain set of rules and guidelines in order to develop a servlet class

Servlet is used to develop dynamic webpages.

==> servlet is not standalone application(it not have main method)    

  servlet is webapplication which runs over the internet 
  servlet is webapplication which runs inside the server.

=>Servlet technology is used to create a web application (resides at server side and generates a dynamic web page).

=>Servlet is a class that extends the capabilities of the servers and responds 
    to the incoming requests. It can respond to any requests.

=>Servlet is a web component that is deployed on the server to create a dynamic web page.

 examples :
  ---------
    Google,facebook,amazon.....etc


1)Servlet is an APi ;-https://tomcat.apache.org/tomcat-x.x-doc/servletapi/

who will provide implementation for servlet api
===============================================
Server vendors are responsible to provide the implementation for serveltApi
(servlet api 3.0 and above)

webserver:
==========
tomcat -- lib--> servlet-api.jar(servlet engine or servlet container)


Application Servers
====================

Weblogic ---javax-assist-3.0.jar
Jboss
websphere --IBM
Glassfish --etc

note:
-----
servlet is java class which doesnot contain main method.


1)Servlet is an interface:
=========================
it contain five abstract methods

 javax.servlet.*;

 1) public void init(ServletConfig config);
 2) pubic void service(ServletRequest request,ServletResponse response);
 3) public void destroy();
 4) public ServletConfig getServletConfig();
 5) public String getServletInfo();

2)GenericServlet is a abstract class
  ------------------------------------- 
  javax.servlet.GenericServlet --it's a abstract class
   
   //it contain implementation for four methods of Servlet interface
    1)init(),destroy(),getServletCOnfig()(,getServletInfo() 

   2)they not provide implementation for service() method()
     abstract method.

   //Generic Servlet class Contain its own methods.


3)HttpServlet is abstract class which extends from GenericServlet
 -----------------------------------------------------------------
  javax.servlet.http.HttpServlet

  //they provide implementation for service(ServletRequest ,ServletResponse) method
   // and it contains it's own methods

     protectecd doGet(HttpServletRequest request,HttpServletResponse 
    respone){
     }

     protected doPost(HttpServletRequest request,HttpServletResponse 
    respone){
     }

     protected service(HttpServletRequest request,HttpServletResponse 
    respone){
     }

    protected doPut(HttpServletRequest request,HttpServletResponse 
    respone){
     }
  
 }

How to develop servlet class:
=============================
In three ways we can create a Servlet class

 1)create a Servlet class which implements Servlet interface directly
    //provide implementation for five methods

 2)create a serlvet class which extends from GenericServlet class and
   provide implementation  for service(ServletRequest req,ServletResponse response)

 3)create a Servletclass which extends from HttpServlet 
  and override any one of the method based on requirements.(Welcome)

note:
-----
Recommended To develop a servlet class--- 3


Http protocol:
===============

Http protocol is stateless protocol or asyhcronous  protocol
------------------------------------------------------------
http(hyper text transfer protocol)

TCP/IP- transmission control protocol /Internet protocol

smtp - simple messager/mail transfer protocol

ftp -- file transfer protocol


please download tomcat server  from apache foundation

=>tomcat server 9.x  in zip 


Example:
---------
Note:
-----
In eclipse for webapplication(Servlets,jsp) we need to create project as Dynamicwebproject.


create a servlet class which displays welcome message with xml configuration(web.xml). 
(web.xml is also called as deployment descriptor)
===============================================================
create a Dynamicwebproject named as myApp

1)create a class WelcomeServlet extends from HttpServlet

2)override any one of the method from httpservelt class
  service(HttpServletRequest request,HttpServletResponse response)

sol:
----
package com.training;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class WelcomeServlet extends HttpServlet{

	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		//first get printwriter object
		PrintWriter out=resp.getWriter();
		
		out.print("Welcome to Servlets using web.xml(configuration file)");
		
		out.close();
	}
	
	
}


3)we need to configure this servlet class(WelcomeServlet) in
  deployment descriptor(web.xml) by using 
 <servlet> 
  <servlet-name>ws</servlet-name>
  <servlet-class>com.training.WelcomeServlet</servlet-class>
  </servlet>

  <servlet-mapping>
   <servlet-name>ws</servlet-name>
   <url-pattern>/welcome</url-pattern>
  </servlet-mapping>
  


4)deploy the project in the tomcat server
  
5)Execute the servlet application
  1) send the request from client(browser) to the server(tomcat) using http protocol  
 syntax:
 --------
  http://localhost:<portno>/projectname/requestedURI(urlpattern)

  ex:
  ---
  http://localhost:8000/myApp/welcome
